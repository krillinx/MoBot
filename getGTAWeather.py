import discord
import asyncio
import time, datetime
import math

moBot = "<@449247895858970624>"
#hardTime = 1554049969.057976

images = [
'HuMDc1TTdWYjIzdWc',
'HuWmlScEJFa1luT28',
'HucU54ZXFjaXgtX1U',
'HuQTFRUVhPV2RBRjQ',
'HuMHd2YnRWbDFXaEE',
'HuRHlzWWhyT0Y4Nm8',
'HuQnhIeldTLTNoZVE',
'HuMnljXzYwZ1IwQmc',
'HubWdGYVBHYmdraW8',
'HuSFJxU2xQQ2Yzemc',
'HuOWg0UnIyV3RsT2M',
'HuNmRIa0hnNi1yb1k',
'HuTGdiMmw2b1Fsczg',
'HuajhraHp3dXhWQlE',
'HuLWt4bWdyMzQ0LW8',
'HuTU1NM1lFYm5xQkE',
'HuNnR1QnpHQWlWbGc',
'HuWF94VGhZVjNTQTQ',
'HuZW1zRDU1RmQ0THM',
'HuSDB2ZFZIQlJrbTg',
'HuX0hWa1JGQlA2MGM',
'HuS0lZbGNJMnMzLUk',
'HueGV0YV85NmZxeEU',
'HuWmZWY1hGSEMxY0E',
'HuMUI4N24wcW9VcU0',
'HudWVSTFhEMjAtUnc',
'HuYmhvWldldldCa2M',
'HuX3FxTVNwVmxjcHM',
'HuUDVOLU1ZUU9uYU0',
'HuY3FWckhqMFRfLVk',
'HuNTBCemdhSVpTdzA',
'HuNGRUTGZrVmtCZjQ',
'HuaW0zaE1sNVIzWGs',
'Hub2F1YVg3SnlyTFU',
'HueERvM2l5NFNheDg',
'HuUkhITHREVmVxV2c',
'Hua01BV2tubVdIZDg',
'HuSE90RlFUbGMwX1k',
'HuTFVqZnRuVDJGVkk',
'HuT3dQcWRrcUVZNGM',
'HuUlRlZnY5dDhOQVE',
'HucTRqMkJucng0ams',
'HuUHlOSFN2ZUxkNVU',
'HuT3Z0UjNYWV9MczA',
'HuMDdyTU1QNjFlSGM',
'HuUlZLU0xZQy1UbTQ',
'HuVDBlU3BjTEJYMkU',
'HuTjJ4SEkyU3prM1U',
'HuVExMN2twRDBjSUU',
'HuYW1jaS1iREJucU0',
'HuaFNNX3J1cTRfYjQ',
'HueFdPTTRBSFdSV0k',
'HubmU3Xy1pSVNHa28',
'HuQ0JfWXlYd0VQRDA',
'HudWN5T08wU2o4MW8',
'HuS0pURVY2aEZqNVU',
'HuVDJtYmNHeXd3YVE',
'HuSDJEc2d0MWlRWms',
'HubGtNYkNUdXNsVTA',
'HuM3I0QzZVcHhUSnM',
'HuLV96ZWVSelp1Mmc',
'HuSm4wMWJWZ1BXUUk',
'HuUFlxSjhRV1JGSWc',
'HueklTWHNST2hua0k',
'HuTXFObXY1OTM3NEU',
'HuRTdXSXZmVGtNT0E',
'HuTV9tNUJXQnVDSEU',
'HuMkgzeTdHb2NZX2M',
'HudWQ0bFBnSlZwalE',
'Hua1g5dVl4OXpkQ2M',
'HuallTOHJuOG1iR2c',
'HuV0dQVVVMdlVib0U',
'HuYmhadTlzSl9zazA',
'HuSUs3TUhXamFqYTQ',
'Huc2tlVERnUWY5Z1U',
'HuZklCSHprZ3NzZW8',
'HuT1p6UmN6bHp4dEk',
'HuR2dienpmZW1STEk',
'HuampLZ2hBTWdzS3c',
'HuNG5abGtfLTBreVE',
'HuZEFHV3NsQTRJaFk',
'HuNGZLY3NRR2ZIa3M',
'Hud0c3dVVuY19TQ1U',
'HuaXlJWlNpMDJfVjA',
'HuR2ZVeFd1ZnJkbzg',
'HuaW1PNU1iTU12UDQ',
'HuVW9jdFhMcXUzSkk',
'HuN1Nsc3dHcEVZWTg',
'HuUUJ0TmVfbGozQ2M',
'HuSFNnR2N1S1RQREE',
'HuNWxqaXlpX1NwSVk',
'Hucy01THpQaU54OEk',
'HuUFBQSFVGNzZqR3M',
'HuYUJTN0dHUXMwcjg',
'HuMkRvUTBYNkdwekE',
'HuUnNScGxJT2xyNXM',
'HuNTh4OWZyaUdEOHc',
'HucGlGdFJsd1N4NXM',
'HuLXIxaUYycEd0ekE',
'HuOW5RbjlVNmZGTms',
'HuZDB1VTM5Q0NrOHM',
'HudW1NckkwSlVWcHc',
'HuMFRyZl9QMkVTMEU',
'Hub1d0MmR2RnVMNXM',
'HuT1J0UnpZMFpaTGs',
'HucTdiUHg1Z1E1ZnM',
'HuUnNTTE9kNUwybjA',
'HuUzB2cWFQOVFfVVE',
'HudUJNM0pFSExZbGc',
'HudGpvWmNtMnRBYmM',
'HuU0RoLUhNN3ZsUjA',
'HuYjVQVlRHc1RPa3c',
'HuU0ZSMW9FQ1JMZkE',
'HuTlIzZC1sektQdVU',
'Hubkhma3Q4MGQ4a1U',
'HuZUdjNzZsT1hZeU0',
'HuM0NNZU1FUWwxbWM',
'HuVDBaT2F4ZlZCVFk',
'Hub05Ia0dDQkdPdlE',
'HudWlPeVJ4YVQ3blk',
'HuSGpiZmJ6Y0I2Rkk',
'HuTTQ5REg4bXA3ZXc',
'HuSFpBWVpiUzhXeWs',
'Huc1FoN21jOVJKSzA',
'HuMkdZMnV6OUZRS1E',
'HuaU4zWFppV252WDg',
'HuSnRTVE16dDhrU0U',
'HuZ3lmU180aFF4MlU',
'HuQ3pXZXhoc3VWXzA',
'HuSDNuR3pPTDlPV1U',
'HuTEZpZEI0ZjU3R2M',
'HuSWxqTE53cmVscEU',
'HuSXg3Z0ZXcElJZms',
'HuTWM4aDJITUlkUk0',
'HuSXVla296bVBRZUk',
'HuRTRWZlp6emp5R28',
'HubXhpMUF5bzFFdHM',
'Huekt6UlFBaXRqV0E',
'HueXIxZGs3VkpNUzA',
'HueHhBUTZXU0ZwTU0',
'Hudy1LVjhrYi1rSmc',
'HuQkplVlVTUi1FUkk',
'HuWWRTSkxQTlNpS3M',
'HueXRhNDRra1p6NUk',
'HuWV94Y0lLTTN5aXM',
'HuY3htUmQ3eTNXbkE',
'Hua05Wd1BGY1ZSSEE',
'HuWG9XcDlEQXhycVE',
'HueE54MkluUzVBRkE',
'HuUjJmQ2NsYmRFRFE',
'HuellGcFpFN1pCaU0',
'HuOWlJLVc1Um5ONGc',
'HuRms4cHkyZVhnbkk',
'HuSnBGeWM0UXF0SlU',
'HuUnlvZHBOMVg5ZFE',
'HuWFZDZDlIeF9XR0E',
'HuRjRJVTY3M3hlNE0',
'HuY0FjbXNqT0ZQdGc',
'HuTGRvcG5JOExHQUU',
'HudHBCQVEwenE4YWs',
'HuZXZycHFhZDFWNnM',
'HueVBPUUVvaHhjejg',
'HuajQ2UFNpdEdKNEU',
'HuMUdjLXFaNGlwVms',
'HudjE4cld1ZEhDYUU',
'HuWElLT20tb3JQcUU',
'HucFJOTjdtblctaGs',
'HucnVZTkRZUzlaMjQ',
'HuRjczNEk3UTE3R1k',
'HuUmxwZ1dxZ1BzTEk',
'HuQVpxMmE3SkxkUFk',
'HucWloN0tRZnlzNVk',
'HuZl9MbjdSU0tmWWc',
'HuTHJOT2NobEc5RUU',
'Hub1RHYmxfbksxVHc',
'Huc0hBcW9zMl9mVUE',
'HucldldFgtZHczQ0k',
'HuNFcyUXNlZVlWY0k',
'HuYmVrcGdYQ0tWeDg',
'HuZGlFak9ORVF1VE0',
'HuSFYyMHVsd0VmMXM',
'HudXUtRGxub3poX1E',
'HudUZzc3EyZ05BX1E',
'HuS1ZqWFZRSmd5Z0k',
'HuTkZtdEFaMGUtY3c',
'HuNUZxTExQcDc4akk',
'HudmYtWHpKS2RiWlk',
'HuYzR6cC1WZURTZXc',
'HuU21SOFZTVEdVUnc',
'HuM0dLQ3BUbVVCZ28',
'HuVEpnc0pUTHlVVWM',
'HudmdyaEVrSS1xQWs',
'Hud2p5dUtpUUNobDQ',
'HuZ1FGbGZDZHRMdGc',
'HuTllUWmRqLVBnRDA',
'HuSmZFWUI5c1k4RzQ',
'HuWHJBLVNYNzBnNzA',
'HuVzlnZG9FcU9Scnc',
'HuRmJVRUF5SFNickE',
'HuQ2E5S0Rvcjh2a0E',
'HuQTYtZGR3aTBzbWM',
'HucnUxdkJpRkxjX1k',
'HuWUdUQ2t4S2dVb1E',
'HuRFMzQkRjajQ5VXc',
'HudTVNOHFZcEl6ZDg',
'HubFd3Q0pVNWMwaE0',
'HuQmh4d0ZxdERNVGM',
'HuNUkxQm94UXQydTQ',
'HuUjdZZVlKTUU0aWc',
'HuN005eUlwc0tlTjA',
'HuRlRjYzFzQUFRNjg',
'HuU1p6RGY5T0Ytb0E',
'HuU1NzeWFjbHo0amM',
'HuUDQwUFZUVjFveUk',
'HuMEIzUWM2Vi1Idk0',
'HuSVRfX0VvVWJGREU',
'HuQ1FtR2ZWV1BObmM',
'Hudk15UWFDRThpS00',
'HuaG53WlRKX0EwYmM',
'HuXzFhbE53SjUyUlE',
'HuUnpSQU82SHhMZDQ',
'HubGJTcDFYald1YTg',
'HuR3BiZmFwN3ZVV2M',
'HuaUJRQ18taFh2WWs',
'HuUW1RalNfbG9TSzg',
'HuVkJZTWJHbWtkX1E',
'HuTTZnd1NkcldHNWM',
'HuaTlIZFFpcldOcjQ',
'HuZDBPQmhtRTY2akk',
'HuVHpod2tabWdQRWs',
'HuSndfekJfSkVJUms',
'HuZU1qUkxtc3RiRlk',
'HuRlZxcEFzMzByVlE',
'HuSXJIZ0N3enctWjQ',
'HuMlVqOUlFb1QxTUE',
'HuSWFTdWJaZ0xjSFU',
'HudGpLMUVQZTFCSVU',
'HucXFiVW1WdGZ3MTA',
'HudTRPUmlNSDVoYWM',
'HueXZBSF95Q1BuVFE',
'HuM0Vkd2lGQ29vLVE',
'HuNnRnMkpzdm9sVEU',
'HubWlkQjA1by1fRGs',
'HuUUFEVzdOM1ByQlE',
'HucWVybjhrUV80WEE',
'HuLWF1dVpPZmlwOHM',
'HuZlR1UnowMlk3ZGs',
'HuY2czRFhYZTE3WTA',
'HuQlhlOGt3WWRxMk0',
'HuVzJoS1dyMEx5YVU',
'HuZ0JIVDlKV29wVmM',
'HuYjRKNlV2MndseDA',
'HuM1JFVjdDLUtZWWc',
'HubFBMdkt6eUgxMFU',
'HueU5IejF1ejRObTA',
'HuUDFaMDMwTlpkZEk',
'HueF9oTVlmZ2JJNVE',
'HuSWV5TXltQnVVYUE',
'HuZWJFYjZOZG10SUk',
'Hub1VHenVUQ3dteGM',
'HuSnRodjB2STZ3Ykk',
'HuNWN0bVNnMjFma1U',
'HuelFPUDVaeFBfOFk',
'HuSTNkV0x0ZkdKOXc',
'HuOFlDSnUzRHNXaXM',
'HucUFFVFdXS2xvUzg',
'HuVFZycEVlVFhhbjQ',
'HuUzR4MUdiUEQyb0U',
'HuMFlycXpEM2hhYlU',
'HuazF3YUNRR3paSFk',
'HuZ0ZwMEdKT2UzSWM',
'HudEYzV0xNY1Y3cm8',
'HuXzVIMGlZMjZfSTg',
'HuZ0p0OXYxVUpRZTg',
'HuWXNvQ1JsbVVhNjg',
'HuOExzU0pSU0l2bDA',
'HuUHdmd09MejZBMk0',
'HuR1RVT0dETTV6Z2M',
'HucVJtakplZE9UVEE',
'HuNjlyOFFHTjlfQlU',
'HuMWtxQW9fZDhOWlk',
'Hud2ZpcVpOSHAtSjg',
'HudHRQQWk0UF8tSEU',
'HuQ0gzdXdibm8ya2s',
'HuRHZaLWlwRU5fcms',
'Hub2JnZ3dqelpsNjA',
'HuSk9LNFFsSVBqREU',
'HuTV8zRVVwdHBGa1k',
'HuTFFEbkFZNFNCNlU',
'HuUG9EN1FzcUYwTlU',
'HuNzJKMkFmMFN1R28',
'HuMzFpeWM5NkxfeEU',
'HuTjlGNVZYeHRnY3M',
'HuUDVLVFAtbzVQMDQ',
'HuQ3ZNM3E0dHdJUkk',
'HuWW5hNmNHeHRPYVU',
'HudW9CQkkxUFAtYlk',
'HuUGFoblh0ZlVVNDA',
'HuM1ozQXJ0NjlIMkU',
'HuZkhVVWxjYTZEeHc',
'HuMzB6Y1ExNUdaRUk',
'HudG1aQkoyLThmOVU',
'HuQkFfcXdZM2tBQkk',
'HuSjlteklITkpfOUE',
'HucFJoY3BSUHZwSzg',
'HuRHhRaTY0cVVNRjA',
'HuaTZxb2dvWGdrN0E',
'HudjNpMHQ3QmtSWUk',
'HuM0NnaEpBN09jNkU',
'HuTjI5ZmpsMGJYaTA',
'HuRWMxQl9NdzNQTWM',
'Hudmh4MHA3T29tb2s',
'Huc3pJQWliRWtwYmc',
'HuZEFNRnJjQjZUd1k',
'HuVXAxRHlGS0dydDg',
'HuWkhEOTlMQnJ6aEk',
'HuZ2xQZU5NY1pUam8',
'HudXZ2eU1ncFhxbTg',
'HudUVvY2ZnZGNIRzg',
'HueU1HSktmWmJMTXM',
'HucXlwbWowS0pqYkU',
'HuVlpiYncyWnZVR0U',
'HuS0RhQ0t4d3lkU1E',
'HuT2ZZZ05ZUUVFYWM',
'HubzlOa2RFV3BNcDg',
'Hua1RtZENFR1dOOHc',
'HuNlVTY2ZGajkxRk0',
'HuVnRHZ1BvUmRyVWM',
'HuRzBndGV2YVJJZ2s',
'Huem8yWWhKbWI1ODQ',
'HuUUM2ellwSWtidEU',
'HueTVTR1p6ZVhza1k',
'HuZmUtYzVOdW5FVkU',
'HudWY4azN3S0I4Rjg',
'HucnFndTBWSjJrWUE',
'HuT3VSdlBIMzhxZEU',
'Huc0lhemIyTElpZjA',
'HuR0l1Ti12dmFXYm8',
'HuNlpKWVdEOGFvWlU',
'HuTXlNX3h2WUlyNGc',
'HuTnFvbm43eV9vNTg',
'HudWs0M2d0UWJ6Mjg',
'HuYnNtX05LRFVYeTA',
'HuS2VHU2Z0MUoxelk',
'HuNi1xMmVWX29lWjg',
'HuaVc0SDl6NjJkLWs',
'HuR3AwcE10N1hGVjQ',
'HuTzZDWEYzREJYeEE',
'HuSWxyMm9EbTByMlk',
'HuRUZvNERXdjMtZ1k',
'HuN0drdzVYWGJEVFk',
'HudWN5elRCU1loT1k',
'HuZ0pGVlFfdWt6VDg',
'HuTXQtWkxxSDRjV1E',
'HublNaYUpaLWpLOE0',
'HuSjM4aW5nc1RuWjQ',
'HuMHB3NjJ2WGZPWDA',
'HuVEtsckFIZldiWHc',
'HuMzNldVNsWXdVXzg',
'HuSmwwZnQ5Y1d4anM',
'HuWlV3MThCbzRuTk0',
'HuT1FSQmpoTVJsN2s',
'HuSFpHaGExTXlzUUE',
'HuZnlLYl82aVI4NHc',
'HuSnBremluRk1iRDQ',
'HuWTB6X0J5SXhSR1U',
'HuUE11Sll5RDZlLXc',
'HuaDA3eXQ0eDdGenc',
'HuRHIyaFp0ZnZjeDA',
'Huei1sYWFON2I5LWM',
'HubGVpcDg1TXFKdGs',
'HuakNQRVJkV2NxWXc',
'HuWWxiRENsQmNFU2s',
'Hua1ByS25jbnZlN0E',
'HuQUtSYkpKSTFkZlE',
'HuLUttbkpPVXFpVkE',
'HuUFBzYUYwX2MyQms',
'HuV0RhUC1UMWp5MUE',
'HuNGdiZDB6Wjlid0k',
'HuMUhaVGVwSjNKTkk',
'HuLTVtUDM2RlRPMU0',
'HueDBhX1RqOVFoM28',
'HuTVZtSnpkdldvMms',
'HuRk5xQUtIR1NTcDQ',
];

async def getGTAWeather(message):
  if ("forecast" in message.content):
    reply = getCurrent()
    msg = await message.channel.send(reply)
    time.sleep(2.5)
    
    # looping to see next 12 in game hours
    if (msg != ""):
      for i in range(1 , 22):
        t = time.time() * 1000 + (i * 2000 * 60)
        t1 = time.time() * 1000 + ((i+1) * 2000 * 60)
        #t = hardTime * 1000 + (i * 10000 * 60)
        #t1 = hardTime * 1000 + ((i+1) * 10000 * 60)
        t2 = datetime.datetime.now() + datetime.timedelta(minutes = i * 2)
        reply = ""
        hour = gtaHour(t)
        if (hour > 23):
          hour = hour - 24
        MIN = int(t2.minute)
        UK = int((t2 + datetime.timedelta(hours=6)).hour)
        ET = int((t2 + datetime.timedelta(hours=1)).hour)
        PT = int((t2 + datetime.timedelta(hours=-2)).hour)
        reply += "GTA Online: {:02}:00 ".format(hour) + "(+" + str(i) + " hours)\n"
        reply += "IRL: {:02d}:{:02d} UK / {:02d}:{:02d} ET / {:02d}:{:02d} PT\n".format(UK, MIN, ET, MIN, PT, MIN)
        reply += ("<https://drive.google.com/uc?export=view&id=0B75PJ5mxM_" + images[gtaDay(t1) * 24 + gtaHour(t1)] + ">\n")
        reply += ("https://drive.google.com/uc?export=view&id=0B75PJ5mxM_" + images[gtaDay(t) * 24 + gtaHour(t)])
        reply += "\nSource (<http://gtaweather.herokuapp.com/weather>)"
        await message.channel.send("<https://drive.google.com/uc?export=view&id=0B75PJ5mxM_" + images[gtaDay(t1) * 24 + gtaHour(t1)] + ">\n")
        await msg.edit(content=reply)
        #time.sleep(2)
      await message.channel.send("Completed cyclying the weather for the next 12 hours.\n'@MoBot weather' for the current weather. '@MoBot weather forecast' for the next 12 hours'")
    else:
      await message.channel.send("Could not get forecast...")
  else:
    reply = getCurrent()
    await message.channel.send(reply)
    await message.channel.send("Completed cyclying the weather for the next 12 hours.\n'@MoBot gta weather' for the current weather. '@MoBot gta weather forecast' for the next 12 hours'")
#end getGTAWeather

def gtaDayAbs(t): 
  return math.floor(t / (2000 * 60 * 24))
def gtaDay(t): 
  return math.floor(t / (2000 * 60 * 24)) % 16
def gtaHour(t): 
  return math.floor(t / (2000 * 60)) % 24
def gtaMinute(t): 
  return math.floor(t / 2000) % 60
  
def getCurrent():
  t = time.time() * 1000
  #t = hardTime * 1000
  t2 = datetime.datetime.now()
  reply = ""
  MIN = int(t2.minute)
  UK = int((t2 + datetime.timedelta(hours=6)).hour)
  ET = int((t2 + datetime.timedelta(hours=1)).hour)
  PT = int((t2 + datetime.timedelta(hours=-2)).hour)
  reply += "GTA Online: {:02}:{:02}\n".format(gtaHour(t), gtaMinute(t))
  reply += "IRL: {:02d}:{:02d} UK / {:02d}:{:02d} ET / {:02d}:{:02d} PT\n".format(UK, MIN, ET, MIN, PT, MIN)
  reply += ("https://drive.google.com/uc?export=view&id=0B75PJ5mxM_" + images[gtaDay(t) * 24 + gtaHour(t)])
  print(gtaDay(t) * 24 + gtaHour(t))
  reply += "\nSource (<http://gtaweather.herokuapp.com/weather>)"
  return reply

print(getCurrent())
print("https://drive.google.com/uc?export=view&id=0B75PJ5mxM_%s" % (images[247]))